1. IoC(Inversion of Control, 제어의 역전)
**IoC(제어의 역전)**이란 객체의 생성 및 관리의 제어권을 개발자가 아닌 스프링 프레임워크가 담당하는 개념이다.
일반적으로 객체의 생성과 의존 관계 설정은 개발자가 직접 코드로 관리하지만, 스프링에서는 컨테이너(ApplicationContext)가 이를 대신 수행한다.

💡 즉, 객체의 생성과 생명주기를 개발자가 제어하는 것이 아니라 스프링이 관리한다.


2. DI(Dependency Injection, 의존성 주입)
**DI(의존성 주입)**은 IoC의 핵심 개념으로, 객체가 직접 의존성을 생성하는 것이 아니라 외부에서 주입받도록 하는 방식이다.
스프링에서는 DI를 통해 객체 간의 결합도를 낮추고 유지보수성을 향상시킨다.

🔹 DI의 주요 방식
생성자 주입 (Constructor Injection) ✅ 권장 방식
필드 주입 (Field Injection)
Setter 주입 (Setter Injection)

3. IoC와 DI의 관계
✔ IoC는 객체의 생성 및 관리를 개발자가 아닌 컨테이너(Spring)가 하도록 제어권을 넘기는 개념이다.
✔ DI는 IoC를 실현하는 방법 중 하나로, 객체 간의 의존성을 직접 설정하지 않고 주입받는 방식이다.

💡 즉, IoC는 개념이고, DI는 이를 구현하는 방법이다.