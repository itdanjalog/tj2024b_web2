1️⃣ REST (REpresentational State Transfer)
📌 REST란?

웹의 자원을 관리하는 아키텍처 스타일(설계 원칙)
자원(Resource), 행동(Method), 표현(Representation) 개념을 기반으로 함
HTTP 프로토콜을 활용하여 클라이언트-서버 간 통신을 단순하고 일관성 있게 구성


2️⃣ REST API (RESTful API)
📌 REST API란?

REST 원칙을 따르는 API(Application Programming Interface)
즉, REST 아키텍처 스타일을 기반으로 설계된 웹 서비스 인터페이스
HTTP 요청을 통해 자원을 생성, 조회, 수정, 삭제(CRUD)할 수 있도록 제공


3️⃣ RESTful
📌 RESTful이란?

REST API의 설계 원칙을 잘 지키고 있는지를 평가하는 개념
**"RESTful API"**라고 부르면, REST 원칙을 잘 준수하여 만든 API를 의미
반대로, RESTful하지 않다면 REST 원칙을 제대로 따르지 않은 API
📌 RESTful한 API의 조건
✔ 일관된 URI 사용 (/users, /posts, /orders)
✔ 적절한 HTTP 메서드 사용 (GET, POST, PUT, DELETE)
✔ 무상태성 유지 (서버가 클라이언트의 요청 상태 저장 X)
✔ 응답 데이터는 JSON 또는 XML 포맷으로 제공


✅ 결론
REST는 설계 원칙,
REST API는 REST를 따른 API,
RESTful은 REST 원칙을 얼마나 잘 따르는지 평가하는 개념!


[ Rest API 어노테이션 ]
    1. Rest API : HTTP 통신을 통해 리소스의 생성[C],읽기[R],업데이트[U],삭제[D]를 수행하는 아키텍처/구조
    2. 종류
        @Controller :
            1. Spring web MVC 중에서 Controller 역할의 클래스임을 표시
            2. 스프링 컨테이너(메모리/저장소) 에 빈(인스턴스/객체) 등록할 수 있다.     * 싱글톤 사용할 필요가 없어졌다.
            3. 모든 HTTP 요청이 매핑/연결 되는 클래스로 사용할 수 있다.
        @RestController :
            1. @Controller + @ResponseBody 조합된 어노테이션
            2. 주로 REST API 컨트롤 에서 사용
            3. 값(리소스) 반환 하고 템플릿 반환시에는 사용하지 않는다.
        @GetMapping("URL정의")
        @PostMapping("URL정의")
        @PutMapping("URL정의")
        @DeleteMapping("URL정의")
            1. HTTP GET/POST/PUT/DELETE method 의 요청을 자바 메소드와 매핑/연결 하는 어노테이션
            2. HTTP GET/POST/PUT/DELETE URL 정의할 수 있다. @GetMapping("URL정의")
                -> 자바 메소드 를 웹 통신으로 부터 외부로 연결이 가능하다.
                -> 주의할점 : 프로젝트 동일한 URL 중복은 불가능하다. 단 HTTP METHOD가 다를경우 는 가능하다.
        @ResponseBody
            1. HTTP 응답을 객체(Body) 또는 값으로 반환 해주는 어노테이션
                -> Content-Type : 'application/json' 또는 text/plain
            2. 만일 생략하면 view( 템플릿=jsp/타임리프/jsx 등등 ) 반환이 기본값으로 적용된다.
                -> Content-Type : 'html/text'

        @RequestMapping("URL정의")
            1. 메소드 또는 클래스 위에 주입이 가능하다.
            2. 주로 클래스 위에서 사용시 메소드 들의 공통 URL 정의할때 사용한다.

        @RequestParam
            1. HTTP 요청 할때 쿼리스트링 방식으로 매개변수를 자바의 매개변수로 매핑하는 어노테이션
            2. '쿼리스트링' 방식의 매개변수를 매핑하는 어노테이션
            3. 사용가능한 HTTP method : @GetMapping , @PostMapping , @PutMapping , @DeleteMapping

        @RequestBody
            1. HTTP 요청 할때 header Body 방식으로 데이터를 자바의 매개변수로 매핑하는 어노테이션
            2. 'HTTP Header Body' 방식의 데이터를 매핑하는 어노테이션
            3. 사용가능한 HTTP method : @PostMapping , @PutMapping

* Rest API 어노테이션 테스트 는 talend api
* Spring 에서는 주로 Body 를 JSON/Dto/Map 로 취급한다.